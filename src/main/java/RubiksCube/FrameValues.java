package RubiksCube;

public interface FrameValues {
    int FRAME_WIDTH = 1000;
    int FRAME_HEIGHT = 1350;
    int FACE_WIDTH = 100;
    int SQUARE_WIDTH = FACE_WIDTH / 3;
    int SQUARE_MARGIN = 1;

    int FRONT_FACE_LEFT_X_1 = (int) (FRAME_WIDTH / 2.5);
    int FRONT_FACE_RIGHT_X_1 = FRONT_FACE_LEFT_X_1 + SQUARE_WIDTH;
    int FRONT_FACE_LEFT_X_2 = FRONT_FACE_RIGHT_X_1 + SQUARE_MARGIN;
    int FRONT_FACE_RIGHT_X_2 = FRONT_FACE_LEFT_X_2 + SQUARE_WIDTH;
    int FRONT_FACE_LEFT_X_3 = FRONT_FACE_RIGHT_X_2 + SQUARE_MARGIN;
    int FRONT_FACE_RIGHT_X_3 = FRONT_FACE_LEFT_X_3 + SQUARE_WIDTH;
    int[] FRONT_FACE_LEFT_X = new int[] {FRONT_FACE_LEFT_X_1, FRONT_FACE_LEFT_X_2, FRONT_FACE_LEFT_X_3};
    int[] FRONT_FACE_RIGHT_X = new int[] {FRONT_FACE_RIGHT_X_1, FRONT_FACE_RIGHT_X_2, FRONT_FACE_RIGHT_X_3};

    int FRONT_FACE_TOP_Y_1 = FRAME_HEIGHT / 4;
    int FRONT_FACE_BOTTOM_Y_1 = FRONT_FACE_TOP_Y_1 + SQUARE_WIDTH;
    int FRONT_FACE_TOP_Y_2 = FRONT_FACE_BOTTOM_Y_1 + SQUARE_MARGIN;
    int FRONT_FACE_BOTTOM_Y_2 = FRONT_FACE_TOP_Y_2 + SQUARE_WIDTH;
    int FRONT_FACE_TOP_Y_3 = FRONT_FACE_BOTTOM_Y_2 + SQUARE_MARGIN;
    int FRONT_FACE_BOTTOM_Y_3 = FRONT_FACE_TOP_Y_3 + SQUARE_WIDTH;
    int[] FRONT_FACE_TOP_Y = new int[] {FRONT_FACE_TOP_Y_1, FRONT_FACE_TOP_Y_2, FRONT_FACE_TOP_Y_3};
    int[] FRONT_FACE_BOTTOM_Y = new int[] {FRONT_FACE_BOTTOM_Y_1, FRONT_FACE_BOTTOM_Y_2, FRONT_FACE_BOTTOM_Y_3};

    int UP_FACE_MIDDLE_ROW_LEFT_X_1 = FRONT_FACE_LEFT_X_1 + (SQUARE_WIDTH / 2);
    int UP_FACE_MIDDLE_ROW_LEFT_X_2 = FRONT_FACE_LEFT_X_2 + (SQUARE_WIDTH / 2);
    int UP_FACE_MIDDLE_ROW_LEFT_X_3 = FRONT_FACE_LEFT_X_3 + (SQUARE_WIDTH / 2);
    int UP_FACE_MIDDLE_ROW_RIGHT_X_1 = FRONT_FACE_RIGHT_X_1 + (SQUARE_WIDTH / 2);
    int UP_FACE_MIDDLE_ROW_RIGHT_X_2 = FRONT_FACE_RIGHT_X_2 + (SQUARE_WIDTH / 2);
    int UP_FACE_MIDDLE_ROW_RIGHT_X_3 = FRONT_FACE_RIGHT_X_3 + (SQUARE_WIDTH / 2);

    int UP_FACE_TOP_ROW_LEFT_X_1 = UP_FACE_MIDDLE_ROW_LEFT_X_1 + (SQUARE_WIDTH / 2);
    int UP_FACE_TOP_ROW_LEFT_X_2 = UP_FACE_MIDDLE_ROW_LEFT_X_2 + (SQUARE_WIDTH / 2);
    int UP_FACE_TOP_ROW_LEFT_X_3 = UP_FACE_MIDDLE_ROW_LEFT_X_3 + (SQUARE_WIDTH / 2);
    int UP_FACE_TOP_ROW_RIGHT_X_1 = UP_FACE_MIDDLE_ROW_RIGHT_X_1 + (SQUARE_WIDTH / 2);
    int UP_FACE_TOP_ROW_RIGHT_X_2 = UP_FACE_MIDDLE_ROW_RIGHT_X_2 + (SQUARE_WIDTH / 2);
    int UP_FACE_TOP_ROW_RIGHT_X_3 = UP_FACE_MIDDLE_ROW_RIGHT_X_3 + (SQUARE_WIDTH / 2);

    int[] UP_FACE_TOP_ROW_LEFT_X = new int[] {UP_FACE_TOP_ROW_LEFT_X_1, UP_FACE_TOP_ROW_LEFT_X_2, UP_FACE_TOP_ROW_LEFT_X_3};
    int[] UP_FACE_TOP_ROW_RIGHT_X = new int[] {UP_FACE_TOP_ROW_RIGHT_X_1, UP_FACE_TOP_ROW_RIGHT_X_2, UP_FACE_TOP_ROW_RIGHT_X_3};
    int[] UP_FACE_MIDDLE_ROW_LEFT_X = new int[] {UP_FACE_MIDDLE_ROW_LEFT_X_1, UP_FACE_MIDDLE_ROW_LEFT_X_2, UP_FACE_MIDDLE_ROW_LEFT_X_3};
    int[] UP_FACE_MIDDLE_ROW_RIGHT_X = new int[] {UP_FACE_MIDDLE_ROW_RIGHT_X_1, UP_FACE_MIDDLE_ROW_RIGHT_X_2, UP_FACE_MIDDLE_ROW_RIGHT_X_3};
    int[] UP_FACE_BOTTOM_ROW_LEFT_X = new int[] {FRONT_FACE_LEFT_X_1, FRONT_FACE_LEFT_X_2, FRONT_FACE_LEFT_X_3};
    int[] UP_FACE_BOTTOM_ROW_RIGHT_X = new int[] {FRONT_FACE_RIGHT_X_1, FRONT_FACE_RIGHT_X_2, FRONT_FACE_RIGHT_X_3};
    int[][] UP_FACE_LEFT_X = new int[][] {
            new int[] {UP_FACE_TOP_ROW_LEFT_X[0] + (SQUARE_WIDTH / 2),
                UP_FACE_TOP_ROW_LEFT_X[1] + (SQUARE_WIDTH / 2),
                UP_FACE_TOP_ROW_LEFT_X[2] + (SQUARE_WIDTH / 2)},
            UP_FACE_TOP_ROW_LEFT_X, UP_FACE_MIDDLE_ROW_LEFT_X, UP_FACE_BOTTOM_ROW_LEFT_X};
    int[][] UP_FACE_RIGHT_X = new int[][] {
            new int[] {UP_FACE_TOP_ROW_RIGHT_X[0] + (SQUARE_WIDTH / 2),
                UP_FACE_TOP_ROW_RIGHT_X[1] + (SQUARE_WIDTH / 2),
                UP_FACE_TOP_ROW_RIGHT_X[2] + (SQUARE_WIDTH / 2)},
            UP_FACE_TOP_ROW_RIGHT_X, UP_FACE_MIDDLE_ROW_RIGHT_X, UP_FACE_BOTTOM_ROW_RIGHT_X};

    int UP_FACE_BOTTOM_Y_3 = FRONT_FACE_TOP_Y_1 - SQUARE_MARGIN;
    int UP_FACE_TOP_Y_3 = UP_FACE_BOTTOM_Y_3 - (SQUARE_WIDTH  / 2);
    int UP_FACE_BOTTOM_Y_2 = UP_FACE_TOP_Y_3 - SQUARE_MARGIN;
    int UP_FACE_TOP_Y_2 = UP_FACE_BOTTOM_Y_2 - (SQUARE_WIDTH  / 2);
    int UP_FACE_BOTTOM_Y_1 = UP_FACE_TOP_Y_2 - SQUARE_MARGIN;
    int UP_FACE_TOP_Y_1 = UP_FACE_BOTTOM_Y_1 - (SQUARE_WIDTH / 2);
    int[] UP_FACE_TOP_Y = new int[] {UP_FACE_TOP_Y_1, UP_FACE_TOP_Y_2, UP_FACE_TOP_Y_3};
    int[] UP_FACE_BOTTOM_Y = new int[] {UP_FACE_BOTTOM_Y_1, UP_FACE_BOTTOM_Y_2, UP_FACE_BOTTOM_Y_3};

//    int RIGHT_FACE_LEFT_X_1 = FRONT_FACE_RIGHT_X_3 + SQUARE_MARGIN;
//    int RIGHT_FACE_RIGHT_X_1 = UP_FACE_MIDDLE_ROW_RIGHT_X_3;
//    int RIGHT_FACE_LEFT_X_2 = ;
//    int RIGHT_FACE_RIGHT_X_2 = UP_FACE_TOP_ROW_RIGHT_X_3;
//    int RIGHT_FACE_LEFT_X_3 =


    int SQUARE_POINTS = 4;
}
